{
  "openapi": "3.0.3",
  "info": {
    "title": "Certify API",
    "description": "## Certify API description.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://certify-api.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "Unauthourized User"
    },
    {
      "name": "Authorization"
    },
    {
      "name": "Dashboard"
    },
    {
      "name": "Mailing"
    },
    {
      "name": "Career"
    },
    {
      "name": "Pricing"
    },
    {
      "name": "Contact"
    }
  ],
  "paths": {
    "/api/upload/csv": {
      "post": {
        "tags": [
          "Unauthourized User"
        ],
        "summary": "Upload certificate CSV",
        "description": "Upload the certificate CSV to process the CSV file and generate a certificate. Send a post request with your CSV file to the endpoint The key name should be **file**",
        "requestBody": {
          "description": "CSV file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/upload_csv_body"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        },
        "security": [
          {
            "jwtToken": []
          }
        ]
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Create user account",
        "description": "Create user account on our mongoDB. Endpoint accepts email and password for normal login and **accessToken** for Google signin. This endpoint works for normal signin and google signin",
        "requestBody": {
          "description": "Request sample",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Login to account",
        "description": "Login to user account stored on database using email and password",
        "requestBody": {
          "description": "Request sample",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      }
    },
    "/api/profile/{id}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get a single user",
        "description": "Endpoint to get a single user from the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "server response"
          }
        },
        "security": [
          {
            "jwtToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Update user profile",
        "description": "This endpoint updates user profile details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the blog",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Blog object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        },
        "security": [
          {
            "jwtToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Delete a user",
        "description": "Endpoint to delete a single user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the blog",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "server response"
          }
        },
        "security": [
          {
            "jwtToken": []
          }
        ]
      }
    },
    "/api/sendCertificate": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Send certificate to mail",
        "description": "Endpoint send certificate to user mail",
        "requestBody": {
          "description": "PDF file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/sendCertificate"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        },
        "security": [
          {
            "jwtToken": []
          }
        ]
      }
    },
    "/api/certificates": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Add certificates for Authorized user",
        "description": "Endpoint post certificates",
        "requestBody": {
          "description": "CSV file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/upload_csv_body"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        },
        "security": [
          {
            "jwtToken": []
          }
        ]
      },
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get all certificates",
        "description": "Endpoint gets all users certificates",
        "responses": {
          "default": {
            "description": "server response"
          }
        },
        "security": [
          {
            "jwtToken": []
          }
        ]
      }
    },
    "/api/certificates/issuedCertificates": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get number of issued certificates",
        "description": "Endpoint gets total number of issued certificates",
        "responses": {
          "default": {
            "description": "server response"
          }
        },
        "security": [
          {
            "jwtToken": []
          }
        ]
      }
    },
    "/api/certificates/{id}": {
      "delete": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Delete a single certificate",
        "description": "Endpoint to delete a single certificate from the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the certificate",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "server response"
          }
        },
        "security": [
          {
            "jwtToken": []
          }
        ]
      }
    },
    "/api/mailinglists": {
      "get": {
        "tags": [
          "Mailing"
        ],
        "summary": "Get list",
        "description": "Endpoint fetches all the emails on the mailing list.",
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      },
      "post": {
        "tags": [
          "Mailing"
        ],
        "summary": "Add email to list",
        "description": "Endpoint accepts email and adds it to the mailing list on mongoDB.",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Mailing"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      }
    },
    "/api/mailinglists/{email}": {
      "delete": {
        "tags": [
          "Mailing"
        ],
        "summary": "Delete email from list",
        "description": "Endpoint deletes a single email from mailing list",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of the user you want to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      }
    },
    "/api/careers": {
      "get": {
        "tags": [
          "Career"
        ],
        "summary": "Get all career",
        "description": "Endpoint gets all the available career from the database",
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      },
      "post": {
        "tags": [
          "Career"
        ],
        "summary": "Create a career posting",
        "description": "Endpoint to create a career posting",
        "requestBody": {
          "description": "Created career object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Career"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      }
    },
    "/api/careers/{id}": {
      "get": {
        "tags": [
          "Career"
        ],
        "summary": "Get a career",
        "description": "Endpoint a single career from database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the career",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      },
      "post": {
        "tags": [
          "Career"
        ],
        "summary": "Update a career",
        "description": "Endpoint to update a single career from database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the career",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Career object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Career"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      },
      "delete": {
        "tags": [
          "Career"
        ],
        "summary": "Delete a career",
        "description": "Endpoint to delete a single career from database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the career",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      }
    },
    "/api/contactus": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get all contacts",
        "description": "Endpoint to get all user contacts",
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Contact the developers",
        "description": "Endpoint allows visitors contact the developers of the platform",
        "requestBody": {
          "description": "Contact object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      }
    },
    "/api/pricing": {
      "get": {
        "tags": [
          "Pricing"
        ],
        "summary": "Get all pricing list",
        "description": "Endpoint to get all pricing list",
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      },
      "post": {
        "tags": [
          "Pricing"
        ],
        "summary": "Create a pricing",
        "description": "This endpoint saves a new pricing list on the database",
        "requestBody": {
          "description": "Pricing object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pricing"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      }
    },
    "/api/pricing/{id}": {
      "get": {
        "tags": [
          "Pricing"
        ],
        "summary": "Get a single pricing",
        "description": "Endpoint to get a single pricing from the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the pricing",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      },
      "post": {
        "tags": [
          "Pricing"
        ],
        "summary": "Update a pricing",
        "description": "This endpoint updates a pricing list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the pricing",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Pricing object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pricing"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      },
      "delete": {
        "tags": [
          "Pricing"
        ],
        "summary": "Delete a pricing",
        "description": "Endpoint to delete a pricing from the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the pricing",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "server response"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignUp": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "user"
          },
          "email": {
            "type": "string",
            "example": "user@hng.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "accessToken": {
            "type": "string"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@hng.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "accessToken": {
            "type": "string"
          }
        }
      },
      "Mailing": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@hng.com"
          }
        }
      },
      "Career": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "example": "Software Engineer"
          },
          "location": {
            "type": "string",
            "example": "Remote"
          },
          "jobType": {
            "type": "string",
            "example": "Backend Engineer"
          },
          "JobDescription": {
            "type": "string",
            "example": "Just be good"
          },
          "jobDescription": {
            "type": "integer",
            "example": 2
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "Comedian"
          },
          "last_name": {
            "type": "string",
            "example": "Remote"
          },
          "phone_number": {
            "type": "string",
            "example": "08105555000"
          },
          "message": {
            "type": "string",
            "example": "Hello"
          },
          "email": {
            "type": "string",
            "example": "mail@hng.com"
          }
        }
      },
      "Pricing": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "basic"
          },
          "price": {
            "type": "string",
            "example": "12000"
          },
          "description": {
            "type": "string",
            "example": "Just pay us"
          }
        }
      },
      "sendCertificate": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "upload_csv_body": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      }
    },
    "securitySchemes": {
      "jwtToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}